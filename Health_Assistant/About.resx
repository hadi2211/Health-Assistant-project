<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>